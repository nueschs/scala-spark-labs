{"paragraphs":[{"user":"admin","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549726167006_-1071229455","id":"20190209-152927_644235502","dateCreated":"2019-02-09T15:29:27+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4606","text":"//note that this is not serializable. just like a real service endpoint wouldn't be\nimport scalikejdbc._\n\nclass MyTotallyLegitService(val hostName:String){\n    Class.forName(\"org.postgresql.Driver\")\n    ConnectionPool.singleton(\"jdbc:postgresql://10.0.10.24:5432/training\", \"trainer\", \"trainingpass\")\n    \n    implicit val session = AutoSession\n    \n    sql\"\"\"\n    CREATE TABLE IF NOT EXISTS side_effect (entry varchar)\n    \"\"\".execute().apply()\n    \n\n    \n    def translateGrade(grade:String):Int ={\n        grade match {\n            case \"A++\" => hostName.length + 5\n            case \"A+\" => hostName.length + 4\n            case \"A\" => hostName.length + 3\n            case \"A-\" => hostName.length + 2\n            case \"B\" => hostName.length + 1\n            case _ => hostName.length\n        }\n    }\n    \n    def appendToFile(msg:String):Unit = sql\"insert into side_effect (entry) values (${msg})\".update.apply\n    \n    def state:Int  = sql\"select count(*) from side_effect\".map(_.int(1)).single.apply().getOrElse(0)\n    \n}","dateUpdated":"2019-02-09T15:29:39+0000"},{"user":"admin","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549726179851_-302319924","id":"20190209-152939_818894996","dateCreated":"2019-02-09T15:29:39+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4676","text":"import spark.implicits._\nval filename = \"/user/zeppelin/data.csv\"\nval df = spark.read.option(\"header\", true).option(\"inferSchema\", false).csv(filename)","dateUpdated":"2019-02-09T15:29:46+0000"},{"user":"admin","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549726194892_-1100822887","id":"20190209-152954_1593198913","dateCreated":"2019-02-09T15:29:54+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4751","text":"//This will terribly explode. please fix\nval serviceInstance = new MyTotallyLegitService(\"SuperHost\")\ndf.map(\n    row => {\n        val channel = row.getAs[String](\"Channel name\")\n        channel -> serviceInstance.translateGrade(channel)\n    }\n).show","dateUpdated":"2019-02-09T15:30:06+0000"},{"user":"admin","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549726214972_-299636889","id":"20190209-153014_1159090240","dateCreated":"2019-02-09T15:30:14+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4823","text":"//This will also explode for the same reason above\n//note that the idea here is that we do something with our data and \"save it on the side if we have it anyway\"\nval serviceInstance = new MyTotallyLegitService(\"SuperHost\")\ndf.map(\n    row => {\n        val channel = row.getAs[String](\"Channel name\")\n        serviceInstance.appendToFile(channel)\n        channel\n    }\n).show","dateUpdated":"2019-02-09T15:31:30+0000"},{"user":"admin","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549726291089_-995369755","id":"20190209-153131_1691144250","dateCreated":"2019-02-09T15:31:31+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4895","text":"//execute this paragraph a couple time and see what happens.\n//why is this happening?\n//why does caching make a difference?\nval serviceInstance = new MyTotallyLegitService(\"SuperHost\")\nmapped.map(s => s + \"a\").foreach(_ => ())\nprintln(serviceInstance.state)\nmapped.map(s => s + \"a\").foreach(_ => ())\nprintln(serviceInstance.state)\nval storedCached = mapped.map(s => s + \"a\").cache\nstoredCached.map(s => s + \"a\").foreach(_ => ())\nprintln(serviceInstance.state)\nstoredCached.map(s => s + \"a\").foreach(_ => ())\nprintln(serviceInstance.state)","dateUpdated":"2019-02-09T15:32:14+0000"}],"name":"CourseLabs/Spark/09_Pitfalls_Skeleton","id":"2E5R8GW3X","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"jdbc:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}
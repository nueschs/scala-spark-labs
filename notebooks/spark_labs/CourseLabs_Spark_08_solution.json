{"paragraphs":[{"text":"val filename = \"/user/zeppelin/data.csv\"\nval df = spark.read.option(\"header\", true).option(\"inferSchema\", false).csv(filename)\n\n\n\ndf.printSchema","user":"admin","dateUpdated":"2019-02-09T12:21:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=0"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1549711265067_583538452","id":"20190209-112105_1928619309","dateCreated":"2019-02-09T11:21:05+0000","dateStarted":"2019-02-09T11:58:28+0000","dateFinished":"2019-02-09T11:58:57+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:55"},{"text":"df.describe(df.columns:_*).show","user":"admin","dateUpdated":"2019-02-09T12:04:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=5"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1549713822930_-1188672439","id":"20190209-120342_972500549","dateCreated":"2019-02-09T12:03:42+0000","dateStarted":"2019-02-09T12:04:45+0000","dateFinished":"2019-02-09T12:04:48+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:56"},{"text":"val tbr = df.filter(\n        not(\n            ($\"video uploads\" rlike \"\\\\d+\") and\n            ($\"subscribers\" rlike \"\\\\d+\") and\n            ($\"video views\" rlike \"\\\\d+\")\n        )\n    )\n    \nprintln(s\"count ${tbr.count}\")\n\ntbr.show","user":"admin","dateUpdated":"2019-02-09T12:11:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=12","http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=13"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1549713927222_-784191058","id":"20190209-120527_1921744032","dateCreated":"2019-02-09T12:05:27+0000","dateStarted":"2019-02-09T12:11:07+0000","dateFinished":"2019-02-09T12:11:07+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:57"},{"text":"import scala.util.{Try, Success, Failure}\nimport spark.implicits._\nimport org.apache.spark.sql.functions._\n\nfinal case class VideoEntry(rank:Int, grade:String, channel:String, uploads:Long, subscribers:Long, views:Long)\n\n\nval ds = df.filter(not(($\"Video Uploads\" contains \"--\") or ($\"subscribers\" contains \"--\"))).map(\n    row => Try {\n        val rank = row.getAs[String](\"Rank\").replace(\"st\", \"\").replace(\"nd\", \"\").replace(\"rd\", \"\").replace(\"th\", \"\").replace(\",\", \"\").toInt\n        val uploads = row.getAs[String](\"Video Uploads\").toLong\n        val subscribers = row.getAs[String](\"Subscribers\").toLong\n        val views = row.getAs[String](\"Video views\").toLong\n        VideoEntry(\n            rank,\n            row.getAs[String](\"Grade\"),\n            row.getAs[String](\"Channel name\"),\n            uploads,\n            subscribers,\n            views\n        )\n    } match {\n        case Success(e) => e\n        case Failure(err) => {\n            //We want controlled cleaning! not just the successful cases. But rather we also need to know what we *remove* to clean our DS\n            //If we do encounter an error here we explicitly want to crash. else we'd have an inconsistent state\n            throw err\n        }\n        \n    }\n).as[VideoEntry]\n\n//note the difference is 390 exactly the amount of cases without subscriber or upload numbers as querried above\nprintln(s\"clean: ${ds.count}\")\nprintln(s\"raw: ${df.count}\")\n\nds.show\nds.createOrReplaceTempView(\"videos\")\n\n\n","user":"admin","dateUpdated":"2019-02-09T12:45:30+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=29","http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=30","http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=31"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1549711529608_1505136256","id":"20190209-112529_1155995726","dateCreated":"2019-02-09T11:25:29+0000","dateStarted":"2019-02-09T12:45:30+0000","dateFinished":"2019-02-09T12:45:32+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:58"},{"text":"%sql\ndescribe videos","user":"admin","dateUpdated":"2019-02-09T12:22:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"col_name":"string","data_type":"string","comment":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549711959879_1149359162","id":"20190209-113239_924137944","dateCreated":"2019-02-09T11:32:39+0000","dateStarted":"2019-02-09T12:22:39+0000","dateFinished":"2019-02-09T12:22:39+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:59"},{"text":"%sql \nselect grade, avg(uploads) as avg_uploads, avg(subscribers) as avg_subscribers, avg(views) as avg_views \nfrom videos\ngroup by grade\norder by avg_subscribers desc","user":"admin","dateUpdated":"2019-02-09T12:31:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"grade":"string","avg_uploads":"string","avg_subscribers":"string","avg_views":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://ip-10-0-10-24.us-west-2.compute.internal:4040/jobs/job?id=27"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1549711958637_-1329289418","id":"20190209-113238_1587956019","dateCreated":"2019-02-09T11:32:38+0000","dateStarted":"2019-02-09T12:31:54+0000","dateFinished":"2019-02-09T12:31:55+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:60"},{"text":"\n","user":"admin","dateUpdated":"2019-02-09T12:33:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1549715400801_-151489556","id":"20190209-123000_885684949","dateCreated":"2019-02-09T12:30:00+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:61"}],"name":"CourseLabs/Spark/08_solution","id":"2E4SV6FZ2","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"jdbc:shared_process":[],"spark2:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}